# If you intened to deploy Kubernetes in an air-gapped environment,
# please consult the documentation on how to configure custom RKE images.
nodes:

<% masters = link('master') %>
<% masters.instances.each do |instance| %>
- address: <%= instance.address %>
  port: "<%= p('rke.ssh_port') %>"
  internal_address: ""
  role:
  - controlplane
  - etcd
  #hostname_override: master-<%=  instance.index %>
  user: "<%= p('rke.ssh_user') %>"
  docker_socket: /var/vcap/sys/run/docker/docker.sock 
  labels: {}
  taints: []
<% end %>  

<% workers = link('worker') %>
<% workers.instances.each do |instance| %>
- address: <%= instance.address %>
  port: "<%= p('rke.ssh_port') %>"
  internal_address: ""
  role:
  - worker
  #hostname_override: worker--<%=  instance.index %>
  user: "<%= p('rke.ssh_user') %>"
  docker_socket: /var/vcap/sys/run/docker/docker.sock
  labels: {}
  taints: []
<% end %>


services:
  etcd:
    image: ""
    extra_args: {}
    extra_binds: []
    extra_env: []
    external_urls: []
    ca_cert: ""
    cert: ""
    key: ""
    path: ""
    uid: 0
    gid: 0
    snapshot: null
    retention: ""
    creation: ""
    backup_config: null
  kube-api:
    image: ""
    extra_args: <%= p('rke.kube-api.k8s-args') %>
    extra_binds: []
    extra_env: []
    service_cluster_ip_range: 10.43.0.0/16
    service_node_port_range: ""
    pod_security_policy: false
    always_pull_images: false
    secrets_encryption_config: null
    audit_log: null
    admission_configuration: null
    event_rate_limit: null
  kube-controller:
    image: ""
    extra_args: {}
    extra_binds: []
    extra_env: []
    cluster_cidr: 10.42.0.0/16
    service_cluster_ip_range: 10.43.0.0/16
  scheduler:
    image: ""
    extra_args: {}
    extra_binds: []
    extra_env: []
  kubelet:
    image: ""
    extra_args:
      #target docker bosh release location  	
      docker: "unix:///var/vcap/sys/run/docker/docker.sock"
      docker-endpoint: "unix:///var/vcap/sys/run/docker/docker.sock" 
    extra_binds:
    - /var/vcap/sys/run/docker/docker.sock:/var/vcap/sys/run/docker/docker.sock    
    extra_env: []
    cluster_domain: cluster.local
    infra_container_image: ""
    cluster_dns_server: 10.43.0.10
    fail_swap_on: false
    generate_serving_certificate: false
  kubeproxy:
    image: ""
    extra_args: {}
    extra_binds: []
    extra_env: []
network:
  #plugin: flannel 
  #weave_network_provider:
  #  password: "Q]SZOQ5wp@n$oijz"
  plugin: calico
  options: {}
  node_selector: {}
authentication:
  strategy: x509
  sans:
<% masters = link('master') %>
<% masters.instances.each do |instance| %>
  - <%= instance.address %>
<% end %>

  webhook: null
addons: ""
addons_include: []
system_images:
  etcd: rancher/coreos-etcd:v3.4.3-rancher1
  alpine: rancher/rke-tools:v0.1.52
  nginx_proxy: rancher/rke-tools:v0.1.52
  cert_downloader: rancher/rke-tools:v0.1.52
  kubernetes_services_sidecar: rancher/rke-tools:v0.1.52
  kubedns: rancher/k8s-dns-kube-dns:1.15.0
  dnsmasq: rancher/k8s-dns-dnsmasq-nanny:1.15.0
  kubedns_sidecar: rancher/k8s-dns-sidecar:1.15.0
  kubedns_autoscaler: rancher/cluster-proportional-autoscaler:1.7.1
  coredns: rancher/coredns-coredns:1.6.5
  coredns_autoscaler: rancher/cluster-proportional-autoscaler:1.7.1
  kubernetes: rancher/hyperkube:v1.17.2-rancher1
  flannel: rancher/coreos-flannel:v0.11.0-rancher1
  flannel_cni: rancher/flannel-cni:v0.3.0-rancher5
  calico_node: rancher/calico-node:v3.10.2
  calico_cni: rancher/calico-cni:v3.10.2
  calico_controllers: rancher/calico-kube-controllers:v3.10.2
  calico_ctl: ""
  calico_flexvol: rancher/calico-pod2daemon-flexvol:v3.10.2
  canal_node: rancher/calico-node:v3.10.2
  canal_cni: rancher/calico-cni:v3.10.2
  canal_flannel: rancher/coreos-flannel:v0.11.0
  canal_flexvol: rancher/calico-pod2daemon-flexvol:v3.10.2
  weave_node: weaveworks/weave-kube:2.5.2
  weave_cni: weaveworks/weave-npc:2.5.2
  pod_infra_container: rancher/pause:3.1
  ingress: rancher/nginx-ingress-controller:nginx-0.25.1-rancher1
  ingress_backend: rancher/nginx-ingress-controller-defaultbackend:1.5-rancher1
  metrics_server: rancher/metrics-server:v0.3.6
  windows_pod_infra_container: rancher/kubelet-pause:v0.1.3

ssh_key_path: /var/vcap/jobs/management/config/id_rsa
ssh_cert_path: ""
ssh_agent_auth: false
authorization:
  mode: rbac
  options: {}
ignore_docker_version: false
kubernetes_version: ""
private_registries: []

# Currently only nginx ingress provider is supported.
# To disable ingress controller, set `provider: none`
# `node_selector` controls ingress placement and is optional
ingress:
  provider: nginx
  node_selector:
    app: ingress
cluster_name: "<%= p('rke.cluster_name') %>"
cloud_provider:
  name: ""
prefix_path: "/var/vcap/store/rke"
addon_job_timeout: 300
bastion_host:
  address: ""
  port: ""
  user: ""
  ssh_key: ""
  ssh_key_path: ""
  ssh_cert: ""
  ssh_cert_path: ""
monitoring:
  provider: ""
  options: {}
  node_selector: {}
restore:
  restore: false
  snapshot_name: ""
# Specify DNS provider (coredns or kube-dns)
dns:
  provider: coredns

